package io.pzstorm.installer.gui;

import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;
import io.pzstorm.installer.Application;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;

public class ChooseDirectoriesView {
    private JPanel root;
    private JTextField gameDirField;
    private JButton gameBrowseButton;
    private JTextField installDirField;
    private JButton installBrowseButton;
    private JLabel setupLabel;
    private JLabel gameDirLabel;
    private JLabel installDirLabel;
    private JButton nextButton;
    private JButton backButton;

    public ChooseDirectoriesView() {
        gameBrowseButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JFileChooser chooser = new JFileChooser();
                chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
                int result = chooser.showOpenDialog(root);
                if (result == JFileChooser.APPROVE_OPTION) {
                    File selected = chooser.getSelectedFile();
                    gameDirField.setText(selected.getAbsolutePath());
                }
            }
        });
        installBrowseButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JFileChooser chooser = new JFileChooser();
                chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
                int result = chooser.showOpenDialog(root);
                if (result == JFileChooser.APPROVE_OPTION) {
                    File selected = chooser.getSelectedFile();
                    installDirField.setText(selected.getAbsolutePath());
                }
            }
        });
        backButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Application.INSTANCE.switchTo(GUIView.START);
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        root = new JPanel();
        root.setLayout(new FormLayout("fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:383px:grow,fill:max(d;4px):noGrow,fill:161px:noGrow,left:4dlu:noGrow,fill:max(d;4px):noGrow", "center:d:noGrow,top:16dlu:noGrow,center:28px:noGrow,center:max(d;4px):noGrow,top:12dlu:noGrow,center:28px:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,top:22dlu:noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:d:grow"));
        root.setBackground(new Color(-14604221));
        setupLabel = new JLabel();
        setupLabel.setForeground(new Color(-1));
        setupLabel.setIcon(new ImageIcon(getClass().getResource("/storm-logo.png")));
        setupLabel.setText("");
        CellConstraints cc = new CellConstraints();
        root.add(setupLabel, cc.xyw(3, 1, 3, CellConstraints.CENTER, CellConstraints.DEFAULT));
        gameDirLabel = new JLabel();
        gameDirLabel.setBackground(new Color(-7978430));
        gameDirLabel.setForeground(new Color(-1));
        gameDirLabel.setHorizontalAlignment(0);
        gameDirLabel.setOpaque(true);
        gameDirLabel.setText("Enter the Project Zomboid game directory:");
        root.add(gameDirLabel, cc.xyw(3, 3, 3, CellConstraints.FILL, CellConstraints.FILL));
        installDirLabel = new JLabel();
        installDirLabel.setBackground(new Color(-7978430));
        installDirLabel.setForeground(new Color(-1));
        installDirLabel.setHorizontalAlignment(0);
        installDirLabel.setOpaque(true);
        installDirLabel.setText("Enter the Storm installation directory:");
        root.add(installDirLabel, cc.xyw(3, 6, 3, CellConstraints.FILL, CellConstraints.FILL));
        gameDirField = new JTextField();
        gameDirField.setName("");
        gameDirField.setPreferredSize(new Dimension(100, 30));
        gameDirField.setText("");
        gameDirField.setToolTipText("");
        root.add(gameDirField, cc.xy(3, 4, CellConstraints.FILL, CellConstraints.CENTER));
        gameBrowseButton = new JButton();
        gameBrowseButton.setText("Browse...");
        root.add(gameBrowseButton, cc.xy(5, 4));
        installDirField = new JTextField();
        installDirField.setPreferredSize(new Dimension(100, 30));
        installDirField.setToolTipText("");
        root.add(installDirField, cc.xy(3, 7, CellConstraints.FILL, CellConstraints.DEFAULT));
        installBrowseButton = new JButton();
        installBrowseButton.setText("Browse...");
        root.add(installBrowseButton, cc.xy(5, 7));
        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
        root.add(spacer1, cc.xyw(3, 9, 3, CellConstraints.DEFAULT, CellConstraints.FILL));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        panel1.setOpaque(false);
        root.add(panel1, cc.xyw(3, 11, 3));
        nextButton = new JButton();
        nextButton.setEnabled(false);
        nextButton.setText("Next");
        panel1.add(nextButton, BorderLayout.EAST);
        backButton = new JButton();
        backButton.setText("Back");
        panel1.add(backButton, BorderLayout.WEST);
        final com.intellij.uiDesigner.core.Spacer spacer2 = new com.intellij.uiDesigner.core.Spacer();
        root.add(spacer2, cc.xyw(3, 13, 3, CellConstraints.DEFAULT, CellConstraints.FILL));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return root;
    }

}
